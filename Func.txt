create database sistemaVendaLivros;
use sistemaVendaLivros;
create table Autores(
idAutor int auto_increment primary key,
nome varchar(255),
pais varchar(50)
);

create table Livros
(
livroId int auto_increment primary key,
titulo varchar(255),
autorId int,
preco decimal(10,2),
estoque int default 0,
constraint fk_autorId_livros foreign key (autorId) references Autores(idAutor)
);

create table vendas(
vendaId int auto_increment primary key,
livroId int,
dataVenda date,
quantidade int,
valorTotal decimal(10,2),
constraint fk_livroId_vendas foreign key (livroId) references livros(livroId)
);

insert into Autores(nome,pais) values 
("machado de assis", "Brasil"),
("clarice Linspector", "Brasil"),
("Jorge Amado", "Brasil");

insert into Livros(titulo, autorId, preco, estoque) values 
("Dom Casmurro",1, 34.90, 12),
("A hora da estrela", 2, 29.90,7),
("Capitões de areia", 3, 39.90,9);

insert into vendas (livroId, dataVenda, quantidade, valorTotal) values
(1, "2024-09-01",3,104.78),
(2, "2024-09-01",2,59.80),
(3, "2024-09-01",1,39.90);

#Criar funções
#Mudar delimitador MySQL
Delimiter //
create function TotalVendas() returns decimal(10,2)
begin #abre função
declare total decimal(10,2);
select sum(valorTotal) into total from vendas;
return ifnull(total, 0);
end //
Delimiter ;
#Executar função 
select TotalVendas();
delimiter // 
create function calculaVenda(ID int, qtd int) returns decimal(10,2)
begin
declare valorTotal decimal(10,2);
declare precoUnit decimal(10,2);

select preco into precoUnit from livros where livros.livroId = ID limit 1;
if precoUnit is null then
return 0;
end if;
set valorTotal = precoUnit * qtd;
return valortotal;
end//
delimiter ;

select * from livros;
select calculaVenda(3,3);


delimiter //
create function calculaEstoque(Id int, qtd int) returns int
begin
declare estoqueAtual int;
declare qtdVenda int;
declare estoqueAtualizado int;
select estoque into estoqueAtual from livros where livroId = Id limit 1;
set estoqueAtualizado = estoqueAtual - qtd;
return estoqueAtualizado;
end // 
delimiter ;

select calculaEstoque(3,2);
select * from livros;

delimiter //
create procedure RegistrarVenda(In id int, in qtd int)
begin
declare valorTotal decimal(10,2);
set valorTotal = calculaVenda(ID,qtd);
insert into Vendas (livroId, dataVenda, quantidade, valorTotal) values
(id, curdate(), qtd, valorTotal);
end //
delimiter ;

select * from vendas;
call RegistrarVenda (3,2);
select * from livros



delimiter //
create procedure baixarEstoque(in id int, in qtd int)
begin
declare estoqueAtualizado int;
set estoqueAtualizado = calculaEstoque(id,qtd);
update livros set estoque = estoqueAtualizado where livroId = id; 
end//
delimiter ;
select * from Livros;
call baixarEstoque(2,5);


delimiter //
create trigger vender
after insert on vendas
for each row
begin
call baixarEstoque(new.livroId, new.quantidade); 
end//
delimiter ;
select * from livros;
select * from vendas;
call registrarVenda(1,8);
#criar view de listagem

create view listVendas as 
select vendaId, vendas.livroId, livros.Titulo, quantidade, valorTotal from vendas inner join livros on vendas.livroId=livros.livroId;

select * from vendas;
select * from ListVendas;